==================
Add
==================

ADD /$FOO ./${bar}

---

(source_file
	(add_instruction
		(path
			(expansion))
		(path
			(expansion))))

==================
Copy
==================

COPY $FOO ./${bar}

---

(source_file
	(copy_instruction
		(path
			(expansion))
		(path
			(expansion))))

==================
Special chars
==================

COPY $FOO ./${bar:-abc}

---

(source_file
	(copy_instruction
		(path
			(expansion))
		(path
			(expansion))))

==================
Env
==================

ENV TEST="foo$BAR" \
	TEST_2=foo\ bar$BAZ \
	TEST_3="foo${bar}" \
	TEST_4=foo\ ${baz}bar \


---

(source_file
	(env_instruction
		(env_pair
			name: (unquoted_string)
			value: (double_quoted_string
				(expansion)))
		(env_pair
			name: (unquoted_string)
			value: (unquoted_string
				(expansion)))
		(env_pair
			name: (unquoted_string)
			value: (double_quoted_string
				(expansion)))
		(env_pair
			name: (unquoted_string)
			value: (unquoted_string
				(expansion)))))

==================
Expose
==================

EXPOSE $FOO


---

(source_file
	(expose_instruction
		(expose_port
			(expansion))))

==================
From
==================

FROM foo/$FOO:$BAR@sha256:$BAZ AS baz$QUX

---

(source_file
	(from_instruction
		(image_spec
		    name: (image_name
				(expansion))
		    tag: (image_tag
				(expansion))
		    digest: (image_digest
				(expansion)))
		as: (image_alias
			(expansion))))

==================
Label
==================

LABEL key="value$FOO"

---

(source_file
	(label_instruction
		(label_pair
			key: (unquoted_string)
			value: (double_quoted_string
				(expansion)))))

==================
Stopsignal
==================

STOPSIGNAL $FOO

---

(source_file
	(stopsignal_instruction
		(expansion)))

==================
User
==================

USER foo$FOO:bar${bar}

---

(source_file
	(user_instruction
		user: (unquoted_string
			(expansion))
		group: (unquoted_string
			(expansion))))

==================
Volume
==================

volume /my$FOO /my${bar}


---

(source_file
	(volume_instruction
		(path
			(expansion))
		(path
			(expansion))))

==================
Workdir
==================

WORKDIR /tmp/$FOO

---

(source_file
	(workdir_instruction
		(path
			(expansion))))

		
==================
Onbuild
==================

ONBUILD ADD /$FOO ./${bar}

---

(source_file
	(onbuild_instruction
		(add_instruction
			(path
				(expansion))
			(path
				(expansion)))))
